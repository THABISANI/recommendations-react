{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Projects/react-navbar-v3/src/pages/recommendations.js\";\nimport React, { useState } from 'react';\n\nfunction Recommendations({\n  user\n}) {\n  const [details, setDetails] = useState({\n    size: 0,\n    \"restaurant\": \"\"\n  });\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n\n  const Recommendations = async () => {\n    const url = `${BASE_SERVER_URL}/tyreposts`;\n    const RecommendationsBody = {\n      UserId: user.userId,\n      Size: details.size,\n      Price: details.price,\n      Status: details.status,\n      Brand: details.brand,\n      Description: details.description,\n      Branch: details.branch,\n      Quantity: details.quantity,\n      Product: details.product,\n      Pattern: details.pattern,\n      Supplier: details.supplier\n    };\n\n    if (user.userId == null) {\n      setError(\"User Id unknown.\");\n    } else {\n      setError(\"\");\n\n      try {\n        console.log(RecommendationsBody);\n        const response = await axios.post(url, RecommendationsBody);\n        let postId = response.data.id;\n        await uploadImageToS3(postId, details.selectedPhoto1, 1);\n        await uploadImageToS3(postId, details.selectedPhoto2, 2);\n        await uploadImageToS3(postId, details.selectedPhoto3, 3);\n        navigate('/search-posts');\n      } catch (error) {\n        console.log(error);\n        setError(error.response.data.toString());\n      }\n    }\n  };\n\n  const uploadImageToS3 = (postId, selectedPhoto, index) => {\n    AWS.config.update({\n      accessKeyId: AWS_ACCESS_KEY,\n      secretAccessKey: AWS_SECRET_KEY,\n      region: AWS_REGION\n    });\n    const S3 = new AWS.S3(); //NOTE: You can change the photo name and convert to wanted type instead of doing it manually\n\n    const objParams = {\n      Bucket: S3_BUCKET_NAME,\n      Key: postId + \"/photo\" + index + \".jpeg\",\n      Body: selectedPhoto,\n      ContentType: selectedPhoto.type // TODO: You should set content-type because AWS SDK will not automatically set file MIME\n\n    };\n    S3.putObject(objParams) //NOTE: Need retry when attempt fails.\n    .promise().then(res => {\n      console.log(`Upload succeeded - `, res);\n    }).catch(err => {\n      console.log(\"Upload failed:\", err);\n    });\n  };\n\n  const submitHandler = e => {\n    e.preventDefault(); //Create images in S3\n\n    Recommendations();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitHandler,\n    className: \"create-post-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-inner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, error !== \"\" ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 34\n    }\n  }, error) : \"\", /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"size\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 19\n    }\n  }, \"Tyre Size:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"size\",\n    id: \"size\",\n    onChange: e => setDetails({ ...details,\n      size: e.target.value\n    }),\n    value: details.size,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 19\n    }\n  }, \"Unit Price:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"price\",\n    id: \"price\",\n    onChange: e => setDetails({ ...details,\n      price: e.target.value\n    }),\n    value: details.price,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 19\n    }\n  }, \"Used or New:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"status\",\n    id: \"status\",\n    onChange: e => setDetails({ ...details,\n      status: e.target.value\n    }),\n    value: details.status,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"brand\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 19\n    }\n  }, \"Tyre Brand:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"brand\",\n    id: \"brand\",\n    onChange: e => setDetails({ ...details,\n      brand: e.target.value\n    }),\n    value: details.brand,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"branch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 19\n    }\n  }, \"Branch:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"branch\",\n    id: \"branch\",\n    onChange: e => setDetails({ ...details,\n      branch: e.target.value\n    }),\n    value: details.branch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"quantity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 19\n    }\n  }, \"Quantity:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"quantity\",\n    id: \"quantity\",\n    onChange: e => setDetails({ ...details,\n      quantity: e.target.value\n    }),\n    value: details.quantity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"pattern\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 19\n    }\n  }, \"Pattern:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"pattern\",\n    id: \"pattern\",\n    onChange: e => setDetails({ ...details,\n      pattern: e.target.value\n    }),\n    value: details.pattern,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"supplier\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 19\n    }\n  }, \"Supplier:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"supplier\",\n    id: \"supplier\",\n    onChange: e => setDetails({ ...details,\n      supplier: e.target.value\n    }),\n    value: details.supplier,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"product\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 19\n    }\n  }, \"Product:\"), /*#__PURE__*/React.createElement(\"select\", {\n    type: \"text\",\n    name: \"product\",\n    id: \"product\",\n    value: details.product,\n    onChange: e => setDetails({ ...details,\n      product: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"tyre\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }\n  }, \"tyre\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"rim\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  }, \"rim\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"mag\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  }, \"mag\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"tube\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }\n  }, \"tube\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"flap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  }, \"flap\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 19\n    }\n  }, \"Description:\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    rows: \"5\",\n    type: \"text\",\n    name: \"description\",\n    id: \"description\",\n    onChange: e => setDetails({ ...details,\n      description: e.target.value\n    }),\n    value: details.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"tyrephoto1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 19\n    }\n  }, UPLOAD_TYRE_IMAGE), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    name: \"tyrephoto1\",\n    alt: \"Photo 1\",\n    id: \"tyrephoto1\",\n    onChange: e => setDetails({ ...details,\n      selectedPhoto1: e.target.files[0]\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"tyrephoto2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 19\n    }\n  }, UPLOAD_TYRE_IMAGE), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    name: \"tyrephoto2\",\n    alt: \"Photo 2\",\n    id: \"tyrephoto2\",\n    onChange: e => setDetails({ ...details,\n      selectedPhoto2: e.target.files[0]\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"tyrephoto3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 19\n    }\n  }, UPLOAD_TYRE_IMAGE), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    name: \"tyrephoto3\",\n    alt: \"Photo 3\",\n    id: \"tyrephoto3\",\n    onChange: e => setDetails({ ...details,\n      selectedPhoto3: e.target.files[0]\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Create Post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-3 form-inner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CreateExcelPosts, {\n    user: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  })));\n}\n\nexport default Recommendations;","map":{"version":3,"sources":["/Users/macbookpro/Projects/react-navbar-v3/src/pages/recommendations.js"],"names":["React","useState","Recommendations","user","details","setDetails","size","error","setError","navigate","useNavigate","url","BASE_SERVER_URL","RecommendationsBody","UserId","userId","Size","Price","price","Status","status","Brand","brand","Description","description","Branch","branch","Quantity","quantity","Product","product","Pattern","pattern","Supplier","supplier","console","log","response","axios","post","postId","data","id","uploadImageToS3","selectedPhoto1","selectedPhoto2","selectedPhoto3","toString","selectedPhoto","index","AWS","config","update","accessKeyId","AWS_ACCESS_KEY","secretAccessKey","AWS_SECRET_KEY","region","AWS_REGION","S3","objParams","Bucket","S3_BUCKET_NAME","Key","Body","ContentType","type","putObject","promise","then","res","catch","err","submitHandler","e","preventDefault","target","value","UPLOAD_TYRE_IMAGE","files"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\n\nfunction Recommendations({user}) {\n  const [details, setDetails] = useState(\n    {size:0,\n      \"restaurant\":\"\"\n  });\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n  const Recommendations = async () => {\n      const url = `${BASE_SERVER_URL}/tyreposts`;\n      const RecommendationsBody =\n      { UserId: user.userId,\n        Size: details.size,\n        Price: details.price,\n        Status: details.status,\n        Brand: details.brand,\n        Description: details.description,\n        Branch: details.branch,\n        Quantity: details.quantity,\n        Product: details.product,\n        Pattern: details.pattern,\n        Supplier: details.supplier\n      };\n      if (user.userId == null) {\n        setError(\"User Id unknown.\");\n      } else {\n        setError(\"\");\n        try {\n          console.log(RecommendationsBody);\n          const response = await axios.post(url, RecommendationsBody );\n          let postId = response.data.id;\n          await uploadImageToS3(postId, details.selectedPhoto1, 1);\n          await uploadImageToS3(postId, details.selectedPhoto2, 2);\n          await uploadImageToS3(postId, details.selectedPhoto3, 3);\n          navigate('/search-posts');\n        } catch (error) {\n          console.log(error);\n          setError(error.response.data.toString());\n        }\n      }\n  };\n\n  const uploadImageToS3 = (postId, selectedPhoto, index) => {\n    AWS.config.update({\n      accessKeyId: AWS_ACCESS_KEY,\n      secretAccessKey: AWS_SECRET_KEY,\n      region: AWS_REGION\n    });\n    const S3 = new AWS.S3();\n    //NOTE: You can change the photo name and convert to wanted type instead of doing it manually\n    const objParams = {\n      Bucket: S3_BUCKET_NAME,\n      Key: postId + \"/photo\"+index+\".jpeg\",\n      Body: selectedPhoto,\n      ContentType: selectedPhoto.type // TODO: You should set content-type because AWS SDK will not automatically set file MIME\n    };\n\n    S3.putObject(objParams) //NOTE: Need retry when attempt fails.\n    .promise()\n    .then(res => {\n     console.log(`Upload succeeded - `, res);\n    })\n    .catch(err => {\n     console.log(\"Upload failed:\", err);\n    });\n  }\n\n  const submitHandler = e => {\n      e.preventDefault();\n      //Create images in S3\n      Recommendations();\n  }\n  return (\n    <div className=\"row\">\n      <div className=\"col-6\">\n        <form onSubmit={submitHandler} className=\"create-post-form\">\n          <div className=\"form-inner\">\n              {(error !== \"\") ? (<div className=\"error\">{error}</div>) : \"\"}\n              <div className=\"form-group\">\n                  <label htmlFor=\"size\">Tyre Size:</label>\n                  <input type=\"text\" name=\"size\" id=\"size\" onChange={e => setDetails({...details, size: e.target.value})} value={details.size}/>\n              </div>\n              <div className=\"form-group\">\n                  <label htmlFor=\"price\">Unit Price:</label>\n                  <input type=\"text\" name=\"price\" id=\"price\" onChange={e => setDetails({...details, price: e.target.value})} value={details.price}/>\n              </div>\n              <div className=\"form-group\">\n                  <label htmlFor=\"status\">Used or New:</label>\n                  <input type=\"text\" name=\"status\" id=\"status\" onChange={e => setDetails({...details, status: e.target.value})} value={details.status}/>\n              </div>\n              <div className=\"form-group\">\n                  <label htmlFor=\"brand\">Tyre Brand:</label>\n                  <input type=\"text\" name=\"brand\" id=\"brand\" onChange={e => setDetails({...details, brand: e.target.value})} value={details.brand}/>\n              </div>\n              <div className=\"form-group\">\n                  <label htmlFor=\"branch\">Branch:</label>\n                  <input type=\"text\" name=\"branch\" id=\"branch\" onChange={e => setDetails({...details, branch: e.target.value})} value={details.branch}/>\n              </div>\n              <div className=\"form-group\">\n                  <label htmlFor=\"quantity\">Quantity:</label>\n                  <input type=\"text\" name=\"quantity\" id=\"quantity\" onChange={e => setDetails({...details, quantity: e.target.value})} value={details.quantity}/>\n              </div>\n              <div className=\"form-group\">\n                  <label htmlFor=\"pattern\">Pattern:</label>\n                  <input type=\"text\" name=\"pattern\" id=\"pattern\" onChange={e => setDetails({...details, pattern: e.target.value})} value={details.pattern}/>\n              </div>\n              <div className=\"form-group\">\n                  <label htmlFor=\"supplier\">Supplier:</label>\n                  <input type=\"text\" name=\"supplier\" id=\"supplier\" onChange={e => setDetails({...details, supplier: e.target.value})} value={details.supplier}/>\n              </div>\n              <div className=\"form-group\">\n                  <label htmlFor=\"product\">Product:</label>\n                  <select  type=\"text\" name=\"product\" id=\"product\" value={details.product} onChange={e => setDetails({...details, product: e.target.value})}>\n                    <option value=\"tyre\">tyre</option>\n                    <option value=\"rim\">rim</option>\n                    <option value=\"mag\">mag</option>\n                    <option value=\"tube\">tube</option>\n                    <option value=\"flap\">flap</option>\n                  </select>\n              </div>\n              <div className=\"form-group\">\n                  <label htmlFor=\"description\">Description:</label>\n                  <textarea rows=\"5\" type=\"text\" name=\"description\" id=\"description\" onChange={e => setDetails({...details, description: e.target.value})} value={details.description}/>\n              </div>\n              <div className=\"form-group\">\n                  <label htmlFor=\"tyrephoto1\">{UPLOAD_TYRE_IMAGE}</label>\n                  <input type=\"file\" name=\"tyrephoto1\" alt=\"Photo 1\" id=\"tyrephoto1\" onChange={e => setDetails({...details, selectedPhoto1: e.target.files[0]})} />\n              </div>\n              <div className=\"form-group\">\n                  <label htmlFor=\"tyrephoto2\">{UPLOAD_TYRE_IMAGE}</label>\n                  <input type=\"file\" name=\"tyrephoto2\" alt=\"Photo 2\" id=\"tyrephoto2\" onChange={e => setDetails({...details, selectedPhoto2: e.target.files[0]})} />\n              </div>\n              <div className=\"form-group\">\n                  <label htmlFor=\"tyrephoto3\">{UPLOAD_TYRE_IMAGE}</label>\n                  <input type=\"file\" name=\"tyrephoto3\" alt=\"Photo 3\" id=\"tyrephoto3\" onChange={e => setDetails({...details, selectedPhoto3: e.target.files[0]})} />\n              </div>\n              <input type=\"submit\" value=\"Create Post\"/>\n          </div>\n        </form>\n      </div>\n      <div className=\"col-3 form-inner\">\n            <CreateExcelPosts user={user}/>\n      </div>\n    </div>\n  )\n}\n\nexport default Recommendations;\n"]},"metadata":{},"sourceType":"module"}